name: Android Release Build and Firebase App Distribution

on:
  push:
    tags:
      - onlyBuild

jobs:
  build:
    name: Build Release APK and Upload to Firebase App Distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Decode keystore.jks
        run: |
          mkdir -p app/jks
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > app/jks/saveurlkey.jks

      - name: Decode google-services.json
        run: |
          mkdir -p app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > app/google-services.json

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build Release APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew clean assembleRelease

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Save Firebase Service Account JSON
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > ${{ github.workspace }}/service-account.json

      - name: Upload APK to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/service-account.json
        run: |
          firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID }}
